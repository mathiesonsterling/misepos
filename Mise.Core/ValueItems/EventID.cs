using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Mise.Core.Entities;

namespace Mise.Core.ValueItems
{
    /// <summary>
    /// Basic class to represent an ID of an event uniquely
    /// </summary>
    public class EventID : IComparable<EventID>, IEquatable<EventID>
    {
        public EventID()
        {
            
        }

        public EventID(string databaseString)
        {
            var items = databaseString.Split(':');
            if (items.Length != 2)
            {
                throw new ArgumentException("Invalid argument of " + databaseString);
            }

            int orderID;
            if (int.TryParse(items[1], out orderID))
            {
				var appCode = (MiseAppTypes)Enum.Parse(typeof(MiseAppTypes),items[0]);
                AppInstanceCode = appCode;
                OrderingID = orderID;
            }
            else
            {
                throw new ArgumentException("Second part of string is not a number");
            }
        }

        public EventID(MiseAppTypes appCreating, long orderID)
        {
            AppInstanceCode = appCreating;
            OrderingID = orderID;
        }

        public string ToDatabaseString()
        {
            return AppInstanceCode + ":" + OrderingID;
        }
        /// <summary>
        /// Unique identifier of the terminal or app that generated the event
        /// </summary>
        public MiseAppTypes AppInstanceCode { get; set; }

        /// <summary>
        /// Number that is a running count of the events generated by this application
        /// </summary>
        public long OrderingID { get; set; }

        public int CompareTo(EventID other)
        {
            return OrderingID.CompareTo(other.OrderingID);
        }

        public bool Equals(EventID other)
        {
            return AppInstanceCode.Equals(other.AppInstanceCode) && OrderingID.Equals(other.OrderingID);
        }
    }
}
