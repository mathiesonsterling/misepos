@using MvcCheckBoxList.Model
@model MiseVendorManagement.Models.VendorItemForSaleViewModel


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Add a new item carried by this vendor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display: none">
            @Html.LabelFor(model => model.VendorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaseSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaseSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CaseSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UPC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UPC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UPC, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--
        <div class="form-group">
            @Html.LabelFor(model => model.ContainerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContainerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContainerName, "", new { @class = "text-danger" })
            </div>
        </div>-->

        <div class="form-group">
            @Html.LabelFor(model => model.ContainerSizeML, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContainerSizeML, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContainerSizeML, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--
        <div class="form-group">
            @Html.LabelFor(model => model.Categories, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Categories, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Categories, "", new {@class = "text-danger"})
            </div>
        </div>-->

        <div class="form-group">
            @Html.LabelFor(model => model.PublicPrice, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicPrice, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PublicPrice, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Categories</span>
            <div class="col-md-10">
                @Html.CheckBoxListFor(model => model.PostedCategoryGuids,
                model=> Model.PossibleCategories,
                c => c.Id,
                c => c.Name,
                model => model.SelectedCategories, Position.Vertical)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {vendorId = @Model.VendorId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
